Stuff that is still TODO:

Deep Learning Model:
- Change Architecture
- Policy Function
- Combination both models
- hooks

Environment:
- Matrix kind of sucks
- Speed up??
- actually end the function if a solution is found, terminate
- don't disregard seen states when doing tree search - DONE (maybe not efficient)
- Create a dictionary for one-hot-encoding and reverse for improved speed - or create a cache for the function
- When solving, needs to save the progress it made and not discard it somehow
- Find a way to remove those stupid loops

Configs:
- find useful configs
- implement function to load configs and pass to the model

Overall:
- Documentation
- Less calls of functions that only call other functions

Optimizer:
- write to the Buffer

TreeSearch:
- DFS
- BFS
- Beam Search?
- Combination of DFS and BFS

Evaluation:
- Have perfect solutions to test on periodically to measure improvement:
    - measure: steps to optimality, time, visited nodes
